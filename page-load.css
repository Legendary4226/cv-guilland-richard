/* Animations */
@keyframes load {
    0% {
        visibility: visible;
    }

    80% {
        opacity: 1;
    }

    100% {
        opacity: 0;
    }
}

@keyframes loading {
    100% {
        opacity: 1;
    }
}

@keyframes slide-left {
    50% {
        transform: translateX(-100%);
        opacity: 0;
    }

    100% {
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes slide-right {
    50% {
        transform: translateX(100%);
        opacity: 0;
    }

    100% {
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes slide-top {
    50% {
        transform: translateY(-100%);
        opacity: 0;
    }

    100% {
        transform: translateY(0);
        opacity: 1;
    }
}

@keyframes slide-bottom {
    50% {
        transform: translateY(100%);
        opacity: 0;
    }

    100% {
        transform: translateY(0);
        opacity: 1;
    }
}

/* Fais "apparaitre" l'élément du milleu */
@keyframes spawn {
    0% {
        /* Le tourner de 90deg de côté */
        opacity: 0;
        transform: rotateY(-90deg);
    }

    50% {
        opacity: 0;
        transform: rotateY(-90deg);
    }

    100% {
        /* Le remettre dans sa position initiale */
        opacity: 1;
        transform: rotateY(0);
    }
}

@keyframes lock-overflow {
    0% {
        overflow: hidden;
    }

    100% {
        overflow: hidden;
    }
}


/* -------------------------------------------------------- LOADER */
/* Element principal */
div#loader {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;

    /* Placer le loader devant la page */
    position: absolute;
    top: 0;
    left: 0;
    z-index: 5;

    /* Pas visible par défaut */
    visibility: hidden;

    width: 100vw;
    height: 100vh;

    background: linear-gradient(0.45turn, #FF3341, #2d3039,#5EB1BF);

    /* à partir de là, je vais m'amuser à changer les durées des autres animations en fonction de cette valeur */
    --loader-duration: 2.5s;

    animation: load var(--loader-duration);

    /* Variables pour animer les enfants du loader (à pas confondre avec celle plus bas pour les éléments de la grid */
    --delay-duration-animation: calc((var(--loader-duration) - 50ms) * 0.8 / 6);
}

div#loader > div {
    display: flex;
    width: 30%;
    justify-content: space-evenly;

    padding-bottom: 5rem;
}


/* Parametrer les ronds et leur animation */
div#loader div > div {
    width: 1rem;
    height: 1rem;

    border-radius: 50%;
    background-color: white;
    box-shadow: 0 0 10px white;
    opacity: 0;

    animation: loading var(--delay-duration-animation);
    animation-fill-mode: forwards;
}

/* Parametrer les ronds individuellement */
div#loader div:nth-child(1) {
    animation-delay: calc(var(--delay-duration-animation) * 0);;
}
div#loader div:nth-child(2) {
    animation-delay: calc(var(--delay-duration-animation) * 1);;
}
div#loader div:nth-child(3) {
    animation-delay: calc(var(--delay-duration-animation) * 2);;
}
div#loader div:nth-child(4) {
    animation-delay: calc(var(--delay-duration-animation) * 3);;
}
div#loader div:nth-child(5) {
    animation-delay: calc(var(--delay-duration-animation) * 4);;
}
div#loader div:nth-child(6) {
    animation-delay: calc(var(--delay-duration-animation) * 5);;
}


/* -------------------------------------------------------- ANIMATION ELEMENTS */
article {
    /* Faire durer l'animation 2.5s + 1s secondes car l'animation commence à 50% mais est prête (visuellement) à l'exécution */
    --delay-animation: calc(2.5s + 1s);
    /* Ajouter du délais pour que toute les animations ne se fassent pas en même temps ou en même temps si 0 */
    --real-delay: 200ms;
}
.photo {
    animation: slide-top var(--delay-animation) ease-out;
}
.infos-principales {
    animation: slide-top var(--delay-animation) ease-out;
    animation-delay: var(--real-delay);
}
.competences {
    animation: slide-right var(--delay-animation) ease-out;
    animation-delay: calc(var(--real-delay) * 2);
}
.langues {
    animation: slide-right var(--delay-animation) ease-out;
    animation-delay: calc(var(--real-delay) * 3);
}
.mini-description {
    animation: slide-bottom var(--delay-animation) ease-out;
    animation-delay: calc(var(--real-delay) * 4);
}
.diplomes {
    animation: slide-left var(--delay-animation) ease-out;
    animation-delay: calc(var(--real-delay) * 5);
}

/* Définir le point d'origine de transformation pour l'élément central qui "apparait" */
.container {
    transform-origin: center;
    animation: lock-overflow calc(2.5s + 1s + 1s);
}

.experiences {
    animation: spawn var(--delay-animation) ease-out;
    animation-delay: calc(var(--real-delay) * 6);
}



/* Désactiver les animations pour les écrans inférieurs à 1500px */
@media (max-width: 1500px) {
    /* Ne pas afficher le loader */
    div#loader {
        display: none;
    }

    /* Ne pas définir l'animation pour tout les éléments qui en avaient une */
    .photo,
    .infos-principales,
    .competences,
    .langues,
    .mini-description,
    .diplomes,
    .experiences,
    .container {
        animation: none;
    }
}